package com.koder.Cyrillitsa.Presenter;

/**
 * Created by Viktor Galkin/koder/on 01.02.2020
 */

// строки класса   начинаются со слова “import”. Это инструкции, которые дают указания включить другие пакеты в нашем проекте.
// Этот инструмент даёт нам возможность пользоваться тем кодом,который уже за нас написан другими программистами

import android.content.Context;
import android.os.Build;
import android.support.design.widget.NavigationView;
import android.support.v4.widget.DrawerLayout;
import android.util.Log;
import android.view.MenuItem;
import android.webkit.ValueCallback;
import android.webkit.WebView;

import java.io.UnsupportedEncodingException;
import java.net.URLDecoder;

import com.koder.Cyrillitsa.R;


//открытый класс BookmarkSelectedListener(Слушатель_Выбранной_Закладки) включающий
// NavigationView.OnNavigationItemSelectedListener(Слушателя_Выбранного_Пункта_Навигации.Для_Вьювера_Навигации)

//класс BookmarkSelectedListener состоит из:

//переменных:

// контекста,
// Веб_вьювера,
// времени,
//объект класса Управляющий_Закладками(BookmarkManager)
//объект разметки Выдвижной_Ящик(DrawerLayout)

//конструктор класса  Слушатель_Выбранной_Закладки(арг.контекст, Веб_вьювер,время,
//объект класса Управляющий_Закладками(BookmarkManager),объект разметки Выдвижной_Ящик(DrawerLayout))

// метода :

//открытый метод типа bool Логика_Прослушивания_Выбранной_Вкладки_Меню_Навигации(арг.Вкладка_Навигации),который

//описывает логику прослушивания выбранной вкладки меню навигации


public class BookmarkSelectedListener implements NavigationView.OnNavigationItemSelectedListener {

    //Переменные

    //Веб_вьювер
    //WebView представляет собой компонент, который отображает внутри приложения веб-страницу. С его помощью можно загрузить
    // из Интернета любую веб-страницу или HTML-документ, или  превратить приложение в полноценный браузер.
    //
    // Чтобы добавить компонент WebView на экран активности, нужно
    // в коде разметки добавить элемент <WebView>.
    //
    //<WebView
    //    android:id="@+id/webView"
    //    android:layout_width="match_parent"
    //    android:layout_height="match_parent"
    //    />
    //Теперь, чтобы использовать компонет, нужно в Главной_Активности  инициализировать экземпляр класса WebView.
    //
    //@Override protected void onCreate(Bundle savedInstanceState) {
    //  super.onCreate(savedInstanceState);
    //  setContentView(R.layout.activity_main);
    //  WebView webView = findViewById(R.id.webView);

    WebView webView;

    //контекст
    Context context;

    //время
    String time;

    //объект класса Управляющий_Закладками
    BookmarkManager bookmarkManager;

    //объект разметки Выдвижной_Ящик

    //DrawerLayout- новый способ навигации при помощи новой разметки android.support.v4.widget.DrawerLayout,
    //
    //За несколько лет использование нового компонента упростилось с появлением Material Design и шаблона
    // Navigation Drawer Activity.
    //
    //По английски drawer обозначает выдвижной ящик и данная разметка ведёт себя схожим образом. Пользователь может лёгким
    // движением руки с края экрана выдвинуть панель навигации для быстрого переключения на другое содержимое, например,
    // фрагмент с новым рисунком.
    //
    //DrawerLayout входит в состав библиотеки Support Library v4 (release 13), который вышел в мае 2013 года и используется по
    // умолчанию в новых проектах, создаваемых в Android Studio.
    //
    //Если вы нужно добавить библиотеку вручную, то в build.gradle пропишете зависимость.
    //
    //dependencies {
    //    compile 'com.android.support:appcompat-v7:23.1.0'
    //}
    DrawerLayout drawerLayout;

    //конструктор класса Слушатель_Выбранной_Закладки

    public BookmarkSelectedListener(Context context, WebView webView, BookmarkManager bookmarkManager, DrawerLayout drawerLayout) {
        this.webView = webView;
        this.context = context;
        this.bookmarkManager = bookmarkManager;
        this.drawerLayout = drawerLayout;
    }



//открытый метод типа bool Выбранная_Вкладка_Навигации(арг.Вкладка_Навигации)

    @Override
    public boolean onNavigationItemSelected(final MenuItem menuItem)
    {
        //1.Создание Заголовка_вкладки_меню
        final String menuItemTitle = menuItem.getTitle().toString();

        //2. если в Заголовке_вкладки_меню  переменные ссылаются на один и тот же объект-страницу веб-ресурса
        //из контекста.Полученной_строки(из_ресурса.добавления_страницы)))


        //метод equals() класса Object используется для сравнения объектов
        //метод equals() сравнивает ссылки на адреса в памяти ,которые хранят переменные и возвращает
        //true только в том случае,если адреса совпадают(т.е.переменные ссылаются на один и тот же объект)

        if (menuItemTitle.equals(context.getString(R.string.addPage)))
        {
            // WebView представляет собой компонент, который отображает внутри приложения веб-страницу. С его помощью можно
            // загрузить из Интернета любую веб-страницу или HTML-документ, или  превратить приложение в полноценный браузер.

            //метод equals() класса Object используется для сравнения объектов
            //метод equals() сравнивает ссылки на адреса в памяти ,которые хранят переменные и возвращает
            //true только в том случае,если адреса совпадают(т.е.переменные ссылаются на один и тот же объект)

            //2.1 если в Заголовке_вкладки_меню  переменные ссылаются на один и тот же объект-страницу веб-ресурса
            //        из контекста.Полученной_строки(из_ресурса.добавления_страницы)))
            if (!webView.getTitle().equals("Cyrillitsa"))
            {
                //2.1.1  если Веб_вьювер.Получает_строку.содержащую(указанную последовательность символов"/watch" И ОДНОВРЕМЕННО
                //Версия Андроид>= KITKAT т.е 4-ки

                // WebView представляет собой компонент, который отображает внутри приложения веб-страницу. С его помощью можно
                // загрузить из Интернета любую веб-страницу или HTML-документ, или  превратить приложение в полноценный браузер.

//contains()- метод чтобы проверить, содержит ли String указанную последовательность символов

                if (webView.getUrl().contains("/watch") && Build.VERSION.SDK_INT >= Build.VERSION_CODES.KITKAT)
                {
                    //то обнулить время
                    time = "0";

                    //Веб_Вьювер вызывает метод EvaluateJavascript, который  будет принимать строку для выполнения и
                    // возвращать строку с результатом.

                    // WebView представляет собой компонент, который отображает внутри приложения веб-страницу. С его помощью можно
                    // загрузить из Интернета любую веб-страницу или HTML-документ, или  превратить приложение в полноценный браузер.

                    //IIFE (Immediately Invoked Function Expression) это JavaScript функция, которая выполняется сразу же после того, как она
                    //была определена.
                    //
                    //(function () {
                    //    statements
                    //})();
                    //
                    //Это тип выражений, также известный как Self-Executing Anonymous Function, который состоит из двух основных частей.
                    //Первая - это сама анонимная функция с лексическим скоупом, заключеннным внутри Оператора группировки ().
                    ////  (function () {}) (); .... это регулярное выражение функции.
                    //Благодаря этому переменные IIFE замыкаются в его пределах, и глобальная область видимости ими не засоряется.
                    //
                    //Вторая часть создает мгновенно выполняющееся функциональное выражение  () , благодаря которому JavaScript-движок
                    //выполняет функцию напрямую.
                    //
                    //Функция становится мгновенно выполняющимся функциональным выражением. Переменные внутри функции не могут быть использованы
                    // за пределами ее области видимости.
                    //
                    //
                    //Переменная, которой присвоено IIFE, хранит в себе результат выполнения функции, но не саму функцию.

                    webView.evaluateJavascript("(function() { return document.getElementsByTagName('video')[0].currentTime; })();", new ValueCallback<String>() {
                        @Override
                        public void onReceiveValue(String value) {
                            Log.i("VALUE", value);

                            //время = значение
                            time = value;

                            //Получить_значение_url.для Веб_вьювера

                            // WebView представляет собой компонент, который отображает внутри приложения веб-страницу. С его помощью можно
                            // загрузить из Интернета любую веб-страницу или HTML-документ, или  превратить приложение в полноценный браузер.
                            String url = webView.getUrl();

                            //выполнять код
                            try
                            {
                                //значение_времени равно

                                //Метод substring() в Java имеет два варианта и возвращает новую строку, которая является подстрокой данной строки.
                                // Подстрока начинается с символа, заданного индексом,и продолжается до конца данной строки или до endIndex-1,
                                // если введен второй аргумент.

                                time = time.substring(0, time.indexOf("."));
                            }

                            //поймать исключение
                            catch (Exception e)
                            {
                                e.printStackTrace();

                                //обнулить время
                                time = "0";
                            }
                            if (url.contains("&t="))
                            {
                                //Метод substring() в Java имеет два варианта и возвращает новую строку, которая является подстрокой данной строки.
                                // Подстрока начинается с символа, заданного индексом,и продолжается до конца данной строки или до endIndex-1,
                                // если введен второй аргумент.
                                url = url.substring(0, url.indexOf("&t="));
                            }
                            //далее Управляющий_закладками.Добавляет_закладку(с заменой символа в строке заголовка  с помощью метод replace() )

                            // WebView представляет собой компонент, который отображает внутри приложения веб-страницу. С его помощью можно
                            // загрузить из Интернета любую веб-страницу или HTML-документ, или  превратить приложение в полноценный браузер.

                            //заменой символа в строке заголовка  с помощью метод replace()



                            bookmarkManager.addBookmark(webView.getTitle().replace(" - Cyrillitsa", ""), url + "&t=" + time);
                        }
                    });
                }

                //2.1.2.Иначе
                else
                {
                    //Метод replace осуществляет поиск и замену частей строки.
                    //
                    //Первым параметром принимается подстрока, которую заменяем, а вторым - подстрока, на которую заменяем.
                    //
                    //Синтаксис
                    //строка_в_которой_заменяем.replace(что заменяем, на что заменяем);
                    //Первым параметром вместо строки может приниматься регулярное выражение.

                    // WebView представляет собой компонент, который отображает внутри приложения веб-страницу. С его помощью можно
                    // загрузить из Интернета любую веб-страницу или HTML-документ, или  превратить приложение в полноценный браузер.

                    bookmarkManager.addBookmark(webView.getTitle().replace(" - Cyrillitsa", ""), webView.getUrl());
                }
            }


            //2.2 иначе если Веб_вьювер получает  результат проверки, содержит ли String указанную последовательность символов  "/results"

            // contains()- метод чтобы проверить, содержит ли String указанную последовательность символов  "/results"

            else if (webView.getUrl().contains("/results"))

            {
                //Индекс_начальной_позиции равна значению...

                // WebView представляет собой компонент, который отображает внутри приложения веб-страницу. С его помощью можно
                // загрузить из Интернета любую веб-страницу или HTML-документ, или  превратить приложение в полноценный браузер.

                //Функция getURL() используется для того, чтобы загрузить документ в текущий  webView

                //indexOf() возвращает позицию указанной строки или символа из данной строки.
                // Если целевая строка или символ не существует, она вернет -1


                int startPosition = webView.getUrl().indexOf("q=") + "q=".length();

                //Индекс_конечной_позиция равна значению...

                //Функция getURL() используется для того, чтобы загрузить документ в текущий  webView

                //indexOf() возвращает позицию указанной строки или символа из данной строки.
                // Если целевая строка или символ не существует, она вернет -1
                int endPosition = webView.getUrl().indexOf("&", startPosition);

                //Титульная строка  равна значению подстроки данной строки с начального индекса  подстроки  до конечного индекса
                // подстроки

                //Метод substring() в Java имеет два варианта и возвращает новую строку, которая является подстрокой данной строки.
                // Подстрока начинается с символа, заданного индексом,и продолжается до конца данной строки или до endIndex-1,
                // если введен второй аргумент.

                String title = webView.getUrl().substring(startPosition, endPosition);
                try
                {
                          //расшифровывать кодировщик URL
                    title = URLDecoder.decode(title, "UTF-8");
                }

                //ловим (Неподдерживаемую_ошибку_кода)
                catch (UnsupportedEncodingException e)
                {
                    //расшифровывать кодировщик URL
                    title = URLDecoder.decode(title);
                }

                //Управляющий_закладками.Добавляет_Закладку(из Веб_вьювера по Url строки)
                bookmarkManager.addBookmark(title + " - Search", webView.getUrl());
            }
        }

        //3.иначе если
        //
        // метод equals() класса Object используется для сравнения объектов
//метод equals() сравнивает ссылки на адреса в памяти ,которые хранят переменные и возвращает
//true только в том случае,если адреса совпадают(т.е.переменные ссылаются на один и тот же объект)

        else if (menuItemTitle.equals(context.getString(R.string.removePage)))
        {
            //3.1
            // WebView представляет собой компонент, который отображает внутри приложения веб-страницу. С его помощью можно
            // загрузить из Интернета любую веб-страницу или HTML-документ, или  превратить приложение в полноценный браузер.

            if (webView.getUrl().contains("/results")) {
                //начальный индекс подстроки
                int startPosition = webView.getUrl().indexOf("q=") + "q=".length();

                //конечный  индекс подстроки
                int endPosition = webView.getUrl().indexOf("&", startPosition);

                //Титульная строка  равна значению подстроки данной строки с начального индекса  подстроки  до конечного индекса
                // подстроки

                //Метод substring() в Java имеет два варианта и возвращает новую строку, которая является подстрокой данной строки.
                // Подстрока начинается с символа, заданного индексом,и продолжается до конца данной строки или до endIndex-1,
                // если введен второй аргумент.

                String title = webView.getUrl().substring(startPosition, endPosition);
                try {
                    //расшифровывать кодировщик URL
                    title = URLDecoder.decode(title, "UTF-8");
                } catch (UnsupportedEncodingException e) {
                    //расшифровывать кодировщик URL
                    title = URLDecoder.decode(title);
                }
                //Управляющий_закладками.Перемещает_закладку()
                bookmarkManager.removeBookmark(title + " - Search");
            }
            //3.2
            else
            {
                try
                {
                    //Управляющий_закладками.Перемещает_закладку()
                    bookmarkManager.removeBookmark(webView.getTitle().replace(" - Cyrillitsa", ""));
                }

                //ловим исключение,которое  призвано  предотвратить сбои, когда страница не загружена

                catch (Exception e)
                {
                    //исключение призвано  предотвратить сбои, когда страница не загружена
                }
            }
        }
        //иначе
        else
        {
            //загрузка заголовка странички ресурса для Веб_вьювера

            // WebView представляет собой компонент, который отображает внутри приложения веб-страницу. С его помощью можно
            // загрузить из Интернета любую веб-страницу или HTML-документ, или  превратить приложение в полноценный браузер.

            //в Веб_Вьювер.Загружается_URL(Управляющий_закладками.Получает_строку_заголовка_странички())

            webView.loadUrl(bookmarkManager.getUrl(menuItemTitle));

            //закрываем меню Выдвижной_Ящик
            drawerLayout.closeDrawers();
        }
        //возвращаем неотрицательное значение
        return true;
    }

}
